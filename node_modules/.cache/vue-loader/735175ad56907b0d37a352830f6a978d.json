{"remainingRequest":"/Users/viethai/Teespring/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/viethai/Teespring/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/viethai/Teespring/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/viethai/Teespring/src/components/Homepage/TeespringHome.vue?vue&type=template&id=ff62a462&scoped=true&","dependencies":[{"path":"/Users/viethai/Teespring/src/components/Homepage/TeespringHome.vue","mtime":1602657235180},{"path":"/Users/viethai/Teespring/node_modules/cache-loader/dist/cjs.js","mtime":1598287468254},{"path":"/Users/viethai/Teespring/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1598287568178},{"path":"/Users/viethai/Teespring/node_modules/cache-loader/dist/cjs.js","mtime":1598287468254},{"path":"/Users/viethai/Teespring/node_modules/vue-loader/lib/index.js","mtime":1598287568178}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibXgtYXV0byBmb250LW1vbW8iIH0sIFsKICAgIF92bS5fbSgwKSwKICAgIF92bS5fbSgxKSwKICAgIF92bS5fbSgyKSwKICAgIF92bS5fbSgzKSwKICAgIF92bS5fbSg0KSwKICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZ3JpZCBncmlkLWNvbHMtMSBjb250YWluZXIgbXgtYXV0byIgfSwgWwogICAgICBfdm0uX20oNSksCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIHsgc3RhdGljQ2xhc3M6ICJpbmxpbmUtZmxleCIgfSwKICAgICAgICBbCiAgICAgICAgICBfYygicm91dGVyLWxpbmsiLCB7IGF0dHJzOiB7IHRvOiAiL3RlZXNwcmluZy1zaG9wIiB9IH0sIFsKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJwci04IiB9LCBbCiAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IHdpZHRoOiAiMzA5cHgiLCBoZWlnaHQ6ICIzNTBweCIgfSwKICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vLi4vYXNzZXRzL2ltYWdlLzEuanBnIikgfQogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGV4dC1jZW50ZXIgbXktNCIgfSwgWwogICAgICAgICAgICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAidGV4dC1zbSIgfSwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoIkxpbWl0ZWQgRWRpdGlvbiIpCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogInRleHQteHMgdGV4dC1ncmF5LTYwMCIgfSwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoImJ5IENPTExFQ1RJT04gQkVFUiBULVNISVJUUy4iKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdKQogICAgICAgICAgXSksCiAgICAgICAgICBfdm0uX20oNiksCiAgICAgICAgICBfdm0uX20oNyksCiAgICAgICAgICBfdm0uX20oOCkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKQogICAgXSksCiAgICBfdm0uX20oOSksCiAgICBfdm0uX20oMTApLAogICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJib3JkZXItdCIgfSksCiAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImdyaWQgZ3JpZC1jb2xzLTUgbXQtMTIgY29udGFpbmVyIG14LWF1dG8iIH0sIFsKICAgICAgX2MoImRpdiIsIHt9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiZGl2IiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtYi0xMCIsCiAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IHdpZHRoOiAiNDJweCIsIGhlaWdodDogIjE4cHgiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKCJzdmciLCBbCiAgICAgICAgICAgICAgX2MoInBhdGgiLCB7CiAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICBkOgogICAgICAgICAgICAgICAgICAgICJNMjcuMjIgMi41MmMtMS4zMjggMC0yLjQwOCAxLjA2LTIuNDA4IDIuMzYzIDAgMS44NTUuNyAzLjU1IDEuODU0IDQuODUyLjQ3OC41MzggMS4wMzMgMS4wMDggMS42NSAxLjM5My4zNy0uNTUzLjY4LTEuMTUuOTE4LTEuNzguMzU4LS45NS41NTQtMS45NzcuNTU0LTMuMDQ4IDAtLjYzNi0uMDctMS4yNTYtLjIwMi0xLjg1NS0uMDEtLjA1LS4wMjMtLjEtLjAzNS0uMTUtLjI2Ny0xLjAyLTEuMjEtMS43NzUtMi4zMy0xLjc3NXpNMTIuMzY0IDkuMzQ4Yy4yMzguNjMuNTQ4IDEuMjI3LjkyIDEuNzguNjE1LS4zODUgMS4xNy0uODU1IDEuNjQ4LTEuMzkzIDEuMTU1LTEuMyAxLjg1Ni0yLjk5NyAxLjg1Ni00Ljg1MiAwLTEuMzAzLTEuMDgtMi4zNjMtMi40MS0yLjM2My0xLjEyIDAtMi4wNjIuNzU2LTIuMzMgMS43NzQtLjAxLjA1LS4wMjQuMS0uMDM1LjE1LS4xMy42LS4yIDEuMjItLjIgMS44NTYgMCAxLjA3LjE5NSAyLjA5OC41NTMgMy4wNDh6bTI2Ljc0LTEuMTU2TDQxLjQgOS4zMmMtMS42NiAzLjI1LTUuMDg1IDUuNDg0LTkuMDQ0IDUuNDg0LTEuMTY0IDAtMi4yOC0uMTk1LTMuMzIyLS41NS0yLjA5NyAyLjA4OC01LjAxIDMuMzg1LTguMjM1IDMuMzg1LTMuMjI1IDAtNi4xNC0xLjI5OC04LjIzNi0zLjM4Ny0xLjA0LjM1Ni0yLjE2LjU1LTMuMzIzLjU1LTQuMTIgMC03LjY2NS0yLjQyLTkuMjQtNS44OWwyLjM1LTEuMDI1YzEuMTc2IDIuNTg3IDMuODIgNC4zOTYgNi44OSA0LjM5Ni41NiAwIDEuMTA3LS4wNjIgMS42MzItLjE3Ni0xLjAzNS0xLjctMS42My0zLjY4NS0xLjYzLTUuODA4IDAtLjgwOC4wODctMS41OTcuMjUtMi4zNTcuMDI0LS4xMS4wNS0uMjE2LjA3Ny0uMzI0QzEwLjEzNiAxLjUzNCAxMi4wNzMgMCAxNC4zNzYgMGMuMDQ2IDAgLjA5LjAwMi4xMzYuMDAzLjE0LjAwNC4yOC4wMTMuNDE4LjAyOCAyLjQ5LjI3IDQuNDI0IDIuMzQgNC40MjQgNC44NTMgMCAzLjM3OC0xLjcyMiA2LjM2LTQuMzUgOC4xNSAxLjU2NiAxLjMgMy41ODggMi4wODYgNS43OTUgMi4wODYgMi4yMDYgMCA0LjIyOC0uNzg3IDUuNzk0LTIuMDg2LTIuNjI4LTEuNzktNC4zNS00Ljc3My00LjM1LTguMTVDMjIuMjQzIDIuMzcgMjQuMTc3LjMgMjYuNjY1LjAzYy4xMzgtLjAxNC4yNzctLjAyMy40MTgtLjAyNy4wNDYgMCAuMDktLjAwMy4xMzctLjAwMyAyLjMwNCAwIDQuMjQgMS41MzUgNC44MDggMy42Mi4wMjcuMTA3LjA1My4yMTQuMDc3LjMyMy4xNjQuNzYuMjUgMS41NS4yNSAyLjM1NyAwIDIuMTIzLS41OTUgNC4xMS0xLjYzIDUuODA4LjUyNi4xMTQgMS4wNy4xNzYgMS42My4xNzYgMi45NSAwIDUuNTA2LTEuNjY4IDYuNzQ3LTQuMDkyeiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KQogICAgICAgICAgICBdKQogICAgICAgICAgXQogICAgICAgICksCiAgICAgICAgX2MoInVsIiwgWwogICAgICAgICAgX2MoImxpIiwgeyBzdGF0aWNDbGFzczogImZsZXgiIH0sIFsKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImEiLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYmctZ3JheS0xMDAgcm91bmRlZC1mdWxsIHAtMiIsCiAgICAgICAgICAgICAgICBhdHRyczogeyBocmVmOiAiIiB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgInN2ZyIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyB3aWR0aDogIjI0cHgiLCBoZWlnaHQ6ICIyNHB4IiB9LAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHZpZXdCb3g6ICIwIDAgNTEyIDUxMiIgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgX2MoInBhdGgiLCB7CiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICBmaWxsOiAiI0JFQzJDNCIsCiAgICAgICAgICAgICAgICAgICAgICAgIGQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgIk0yMTEuOSAxOTcuNGgtMzYuN3Y1OS45aDM2LjdWNDMzLjFoNzAuNVYyNTYuNWg0OS4ybDUuMi01OS4xaC01NC40YzAgMCAwLTIyLjEgMC0zMy43IDAtMTMuOSAyLjgtMTkuNSAxNi4zLTE5LjUgMTAuOSAwIDM4LjIgMCAzOC4yIDBWODIuOWMwIDAtNDAuMiAwLTQ4LjggMCAtNTIuNSAwLTc2LjEgMjMuMS03Ni4xIDY3LjNDMjExLjkgMTg4LjggMjExLjkgMTk3LjQgMjExLjkgMTk3LjR6IgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdCiAgICAgICAgICAgICksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJnLWdyYXktMTAwIHJvdW5kZWQtZnVsbCBwLTIgbWwtMiIsCiAgICAgICAgICAgICAgICBhdHRyczogeyBocmVmOiAiIiB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgInN2ZyIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyB3aWR0aDogIjI0cHgiLCBoZWlnaHQ6ICIyNHB4IiB9LAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHZpZXdCb3g6ICIwIDAgNTEyIDUxMiIgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgX2MoInBhdGgiLCB7CiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICBkOgogICAgICAgICAgICAgICAgICAgICAgICAgICJNNDE5LjYgMTY4LjZjLTExLjcgNS4yLTI0LjIgOC43LTM3LjQgMTAuMiAxMy40LTguMSAyMy44LTIwLjggMjguNi0zNiAtMTIuNiA3LjUtMjYuNSAxMi45LTQxLjMgMTUuOCAtMTEuOS0xMi42LTI4LjgtMjAuNi00Ny41LTIwLjYgLTQyIDAtNzIuOSAzOS4yLTYzLjQgNzkuOSAtNTQuMS0yLjctMTAyLjEtMjguNi0xMzQuMi02OCAtMTcgMjkuMi04LjggNjcuNSAyMC4xIDg2LjkgLTEwLjctMC4zLTIwLjctMy4zLTI5LjUtOC4xIC0wLjcgMzAuMiAyMC45IDU4LjQgNTIuMiA2NC42IC05LjIgMi41LTE5LjIgMy4xLTI5LjQgMS4xIDguMyAyNS45IDMyLjMgNDQuNyA2MC44IDQ1LjIgLTI3LjQgMjEuNC02MS44IDMxLTk2LjQgMjcgMjguOCAxOC41IDYzIDI5LjIgOTkuOCAyOS4yIDEyMC44IDAgMTg5LjEtMTAyLjEgMTg1LTE5My42QzM5OS45IDE5My4xIDQxMC45IDE4MS43IDQxOS42IDE2OC42eiIsCiAgICAgICAgICAgICAgICAgICAgICAgIGZpbGw6ICIjQkVDMkM0IgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdCiAgICAgICAgICAgICksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJnLWdyYXktMTAwIHAtMiByb3VuZGVkLWZ1bGwgbXgtMiIsCiAgICAgICAgICAgICAgICBhdHRyczogeyBocmVmOiAiIiB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgInN2ZyIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyB3aWR0aDogIjI0cHgiLCBoZWlnaHQ6ICIyNHB4IiB9LAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHZpZXdCb3g6ICIwIDAgMzIgMzIiIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKCJwYXRoIiwgewogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgZDoKICAgICAgICAgICAgICAgICAgICAgICAgICAiTTE2IDIuODhjNC4yNzUgMCA0Ljc4LjAyIDYuNDYyLjA5NSAxLjU2My4wNyAyLjQwNi4zMyAyLjk3LjU1Ljc0My4yODggMS4yOC42MzggMS44MzYgMS4xOTQuNTYzLjU2LjkwNiAxLjA5IDEuMiAxLjgzNC4yMi41NjMuNDggMS40MTIuNTUgMi45Ny4wNzUgMS42ODcuMDk0IDIuMTkzLjA5NCA2LjQ2MnMtLjAyIDQuNzgtLjA5NCA2LjQ2MmMtLjA3IDEuNTYyLS4zMyAyLjQwNS0uNTUgMi45Ny0uMjg4Ljc0Mi0uNjM3IDEuMjgtMS4xOTQgMS44MzUtLjU2My41NjMtMS4wOTQuOTA2LTEuODM3IDEuMi0uNTYzLjIyLTEuNDEzLjQ4LTIuOTcuNTUtMS42ODcuMDc1LTIuMTkzLjA5NC02LjQ2Mi4wOTRzLTQuNzgtLjAyLTYuNDYzLS4wOTVjLTEuNTYzLS4wNy0yLjQwNi0uMzMtMi45Ny0uNTUtLjc0My0uMjg4LTEuMjgtLjYzNy0xLjgzNy0xLjE5NC0uNTYzLS41NjItLjkwNi0xLjA5My0xLjItMS44MzYtLjIyLS41NjMtLjQ4LTEuNDEzLS41NS0yLjk3LS4wNzUtMS42ODctLjA5NC0yLjE5My0uMDk0LTYuNDYycy4wMi00Ljc4LjA5OC02LjQ2M2MuMDctMS41NjQuMzMtMi40MDcuNTUtMi45Ny4yODgtLjc0NC42MzgtMS4yOCAxLjE5NC0xLjgzOC41NjMtLjU2NCAxLjA5NC0uOTA3IDEuODM4LTEuMi41NjMtLjIyIDEuNDEyLS40OCAyLjk3LS41NSAxLjY4LS4wNzYgMi4xODctLjA5NSA2LjQ2Mi0uMDk1ek0xNiAwYy00LjM0NCAwLTQuODg3LjAyLTYuNTk0LjA5NC0xLjcuMDc1LTIuODcuMzUtMy44OC43NDQtMS4wNTcuNDEyLTEuOTUuOTU2LTIuODM4IDEuODUtLjg5NC44ODgtMS40MzggMS43OC0xLjg1IDIuODNDLjQ0NCA2LjU0LjE2OCA3LjcuMDk0IDkuNC4wMiAxMS4xMTMgMCAxMS42NTYgMCAxNnMuMDIgNC44ODcuMDk0IDYuNTk0Yy4wNzUgMS43LjM1IDIuODcuNzQ0IDMuODguNDEzIDEuMDU3Ljk1NiAxLjk1IDEuODUgMi44MzguODg3Ljg4NyAxLjc4IDEuNDM4IDIuODMgMS44NDQgMS4wMi4zOTQgMi4xODIuNjcgMy44ODIuNzQ0IDEuNzA2LjA3NSAyLjI1LjA5NCA2LjU5NC4wOTRzNC44ODgtLjAyIDYuNTk0LS4wOTRjMS43LS4wNzUgMi44Ny0uMzUgMy44OC0uNzQ0IDEuMDUtLjQwNiAxLjk0NS0uOTU2IDIuODMyLTEuODQ0czEuNDM4LTEuNzggMS44NDQtMi44M2MuMzk0LTEuMDIuNjctMi4xODIuNzQ0LTMuODgyLjA3NS0xLjcwNi4wOTQtMi4yNS4wOTQtNi41OTRzLS4wMi00Ljg4Ny0uMDk0LTYuNTk0Yy0uMDc1LTEuNy0uMzUtMi44Ny0uNzQ0LTMuODgtLjM5NC0xLjA2NC0uOTM4LTEuOTU3LTEuODMtMi44NDVDMjguNDI0IDEuOCAyNy41MyAxLjI1IDI2LjQ4Ljg0MyAyNS40Ni40NSAyNC4zLjE3MyAyMi42LjEgMjAuODg4LjAxNiAyMC4zNDQgMCAxNiAweiIsCiAgICAgICAgICAgICAgICAgICAgICAgIGZpbGw6ICIjQkVDMkM0IgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgIF9jKCJwYXRoIiwgewogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgZDoKICAgICAgICAgICAgICAgICAgICAgICAgICAiTTE2IDcuNzhjLTQuNTM3IDAtOC4yMiAzLjY4Mi04LjIyIDguMjJzMy42ODIgOC4yMiA4LjIyIDguMjIgOC4yMi0zLjY4MiA4LjIyLTguMjJjMC00LjUzNy0zLjY4Mi04LjIyLTguMjItOC4yMnptMCAxMy41NWMtMi45NDQgMC01LjMzLTIuMzg2LTUuMzMtNS4zM3MyLjM4Ni01LjMzIDUuMzMtNS4zMyA1LjMzIDIuMzg2IDUuMzMgNS4zMy0yLjM4NiA1LjMzLTUuMzMgNS4zM3pNMjYuNDYyIDcuNDU2YzAgMS4wNi0uODYgMS45Mi0xLjkyIDEuOTJzLTEuOTE4LS44Ni0xLjkxOC0xLjkyLjg2LTEuOTIgMS45Mi0xLjkyIDEuOTE4Ljg2IDEuOTE4IDEuOTJ6IiwKICAgICAgICAgICAgICAgICAgICAgICAgZmlsbDogIiNCRUMyQzQiCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImEiLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYmctZ3JheS0xMDAgcm91bmRlZC1mdWxsIHAtMiIsCiAgICAgICAgICAgICAgICBhdHRyczogeyBocmVmOiAiIiB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgInN2ZyIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyB3aWR0aDogIjI0cHgiLCBoZWlnaHQ6ICIyNHB4IiB9LAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHZpZXdCb3g6ICIwIDAgNTEyIDUxMiIgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAicGF0aCIsCiAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsbDogIiNCRUMyQzQiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiTTI2Ni42IDc2LjVjLTEwMC4yIDAtMTUwLjcgNzEuOC0xNTAuNyAxMzEuNyAwIDM2LjMgMTMuNyA2OC41IDQzLjIgODAuNiA0LjggMiA5LjIgMC4xIDEwLjYtNS4zIDEtMy43IDMuMy0xMyA0LjMtMTYuOSAxLjQtNS4zIDAuOS03LjEtMy0xMS44IC04LjUtMTAtMTMuOS0yMy0xMy45LTQxLjMgMC01My4zIDM5LjktMTAxIDEwMy44LTEwMSA1Ni42IDAgODcuNyAzNC42IDg3LjcgODAuOCAwIDYwLjgtMjYuOSAxMTIuMS02Ni44IDExMi4xIC0yMi4xIDAtMzguNi0xOC4yLTMzLjMtNDAuNiA2LjMtMjYuNyAxOC42LTU1LjUgMTguNi03NC44IDAtMTcuMy05LjMtMzEuNy0yOC40LTMxLjcgLTIyLjUgMC00MC43IDIzLjMtNDAuNyA1NC42IDAgMTkuOSA2LjcgMzMuNCA2LjcgMzMuNHMtMjMuMSA5Ny44LTI3LjEgMTE0LjljLTguMSAzNC4xLTEuMiA3NS45LTAuNiA4MC4xIDAuMyAyLjUgMy42IDMuMSA1IDEuMiAyLjEtMi43IDI4LjktMzUuOSAzOC4xLTY5IDIuNi05LjQgMTQuOC01OCAxNC44LTU4IDcuMyAxNCAyOC43IDI2LjMgNTEuNSAyNi4zIDY3LjggMCAxMTMuOC02MS44IDExMy44LTE0NC41QzQwMC4xIDEzNC43IDM0Ny4xIDc2LjUgMjY2LjYgNzYuNXoiCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCI+IildCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXQogICAgICAgICAgICApCiAgICAgICAgICBdKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfdm0uX20oMTEpLAogICAgICBfdm0uX20oMTIpLAogICAgICBfdm0uX20oMTMpLAogICAgICBfdm0uX20oMTQpCiAgICBdKSwKICAgIF92bS5fbSgxNSkKICBdKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygKICAgICAgImRpdiIsCiAgICAgIHsgc3RhdGljQ2xhc3M6ICJncmlkIGdyaWQtY29scy0yIGJnLXdoaXRlIGZpeGVkIHRvcC0wIHctZnVsbCAiIH0sCiAgICAgIFsKICAgICAgICBfYygKICAgICAgICAgICJkaXYiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogImlubGluZS1mbGV4IGZvbnQtbGlnaHQgdGV4dC1zbSBweS02IG1sLTI0IiB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInhsOnByLTEwIG1kOnByLTQiIH0sIFsKICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgd2lkdGg6ICIxMjBweCIgfSwKICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vLi4vYXNzZXRzL2ltYWdlL3RlZXNwcmluZy5wbmciKSB9CiAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAieGw6cHItMTAgbWQ6cHItNCIgfSwgWwogICAgICAgICAgICAgIF92bS5fdigiSG93IGl0IHdvcmtzIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAieGw6cHItMTAgbWQ6cHItNCIgfSwgWwogICAgICAgICAgICAgIF92bS5fdigiU2VsbCBhbnl0aGluZyIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInhsOnByLTEwIG1kOnByLTQiIH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIlNlbGwgZXZlcnl3aGVyZSIpCiAgICAgICAgICAgIF0pCiAgICAgICAgICBdCiAgICAgICAgKSwKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZsZXgganVzdGlmeS1lbmQgcHktNCBtci0yNCIgfSwgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgICAiYmctcmVkLTYwMCB0ZXh0LXdoaXRlIGZvbnQtbWVkaXVtIHRleHQtc20gcHktMiBweC00IHJvdW5kZWQiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfdm0uX3YoIlN0YXJ0IERlc2lnbmluZyIpXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICAgInBsLTggcHQtMiB0ZXh0LXJlZC02MDAgZm9udC1zZW1pYm9sZCBob3Zlcjp0ZXh0LXJlZC03MDAgY3Vyc29yLXBvaW50ZXIiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfdm0uX3YoIkxvZ2luIildCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXQogICAgKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImdyaWQgZ3JpZC1jb2xzLTIgYmctYmxhY2sgIiB9LCBbCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibWwtMjQgdGV4dC1sZWZ0IiB9LCBbCiAgICAgICAgX2MoImgxIiwgeyBzdGF0aWNDbGFzczogInRleHQtNnhsIGZvbnQtYmxhY2sgdGV4dC13aGl0ZSBtdC0xMiAiIH0sIFsKICAgICAgICAgIF92bS5fdigiQ29tbWVyY2UuICIpLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfdm0uX3YoIk5vdCBDb21wbGljYXRlZC4iKQogICAgICAgIF0pLAogICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogInRleHQtd2hpdGUgcHQtMiBwYi02IHRleHQtc20iIH0sIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIlRlZXNwcmluZyBpcyBhIGZyZWUgZW5kIHRvIGVuZCBzb2x1dGlvbiBmb3IgeW91ciBlLWNvbW1lcmNlIGJ1c2luZXNzLiBDcmVhdGUgJiAiCiAgICAgICAgICApLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfdm0uX3YoInNlbGwgb25saW5lLiIpCiAgICAgICAgXSksCiAgICAgICAgX2MoCiAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgImJnLXJlZC02MDAgdGV4dC13aGl0ZSBmb250LW1lZGl1bSB0ZXh0LXNtIHB5LTIgcHgtNiByb3VuZGVkLXNtIG1iLTU2IgogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIkdldCBTdGFydGVkIildCiAgICAgICAgKQogICAgICBdKSwKICAgICAgX2MoImRpdiIsIHsKICAgICAgICBzdGF0aWNDbGFzczogImJnLWNvdmVyIGJnLWNlbnRlciIsCiAgICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAgICJiYWNrZ3JvdW5kLWltYWdlIjogInVybCgnaW1hZ2UvaGVyb0Nyb3BHcmFwaGljMldlYi5wbmcnKSIKICAgICAgICB9CiAgICAgIH0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygKICAgICAgImRpdiIsCiAgICAgIHsgc3RhdGljQ2xhc3M6ICJncmlkIGdyaWQtY29scy0zIGdhcC02IC1tdC0zMiBtYi0yMCBjb250YWluZXIgbXgtYXV0byIgfSwKICAgICAgWwogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic2hhZG93LTJ4bCIgfSwgWwogICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3VuZGVkLXNtIiwKICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi8uLi9hc3NldHMvaW1hZ2UvdGlrdG9rX2hvbWVwYWdlX3YyLnBuZyIpIH0KICAgICAgICAgIH0pCiAgICAgICAgXSksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJzaGFkb3ctMnhsIiB9LCBbCiAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQtc20iLAogICAgICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uLy4uL2Fzc2V0cy9pbWFnZS9Zb3VUdWJlVGlsZS5qcGciKSB9CiAgICAgICAgICB9KQogICAgICAgIF0pLAogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic2hhZG93LTJ4bCIgfSwgWwogICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3VuZGVkLXNtIiwKICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi8uLi9hc3NldHMvaW1hZ2UvQ3JlYXRvclRpbGUuanBnIikgfQogICAgICAgICAgfSkKICAgICAgICBdKQogICAgICBdCiAgICApCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKAogICAgICAiZGl2IiwKICAgICAgeyBzdGF0aWNDbGFzczogImdyaWQgZ3JpZC1jb2xzLTIgYmctZ3JheS0yMDAgY29udGFpbmVyIG14LWF1dG8gIiB9LAogICAgICBbCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJtbC0yMCBteS02IiB9LCBbCiAgICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJmb250LWV4dHJhYm9sZCB0ZXh0LTV4bCBtYi02IiB9LCBbCiAgICAgICAgICAgIF92bS5fdigiQnJvd3NlIHByb2R1Y3RzICIpLAogICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgX3ZtLl92KCJjcmVhdGVkIHdpdGgiKSwKICAgICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICAgIF92bS5fdigiIFRlZXNwcmluZyIpCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaW5saW5lLWZsZXgiIH0sIFsKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJwdC00IHB4LTMgYmctd2hpdGUiIH0sIFsKICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgd2lkdGg6ICIxNXB4IiwgaGVpZ2h0OiAiMTVweCIgfSwKICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiLi4vLi4vYXNzZXRzL2ltYWdlL3NlYXJjaC1tYWduaWZpZXItb3V0bGluZS1zdmdyZXBvLWNvbS5zdmciKSwKICAgICAgICAgICAgICAgICAgYWx0OiAiIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJweS0zIG91dGxpbmUtbm9uZSB3LTU2IiwKICAgICAgICAgICAgICBhdHRyczogeyB0eXBlOiAidGV4dCIsIHBsYWNlaG9sZGVyOiAic2VhcmNoIHRoZSBtYXJrZXRwbGFjZSAiIH0KICAgICAgICAgICAgfSksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICAgICAiYmctcmVkLTYwMCB0ZXh0LXdoaXRlIGZvbnQtbWVkaXVtIHRleHQtc20gcHktMyBweC04IgogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgW192bS5fdigiR28iKV0KICAgICAgICAgICAgKQogICAgICAgICAgXSkKICAgICAgICBdKSwKICAgICAgICBfYygiZGl2Iiwge30sIFsKICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXQtMTAgbWwtMjAiLAogICAgICAgICAgICBzdGF0aWNTdHlsZTogeyBoZWlnaHQ6ICIyNTBweCIgfSwKICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi8uLi8uLi9wdWJsaWMvaW1hZ2Uvc2VhcmNoUHJvZHVjdHMucG5nIikgfQogICAgICAgICAgfSkKICAgICAgICBdKQogICAgICBdCiAgICApCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKAogICAgICAiZGl2IiwKICAgICAgeyBzdGF0aWNDbGFzczogImdyaWQgZ3JpZC1jb2xzLTEgYmctZ3JheS05MDAgY29udGFpbmVyIG14LWF1dG8iIH0sCiAgICAgIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZsZXggaXRlbXMtY2VudGVyIG15LTYgbWwtNDgiIH0sIFsKICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogInRleHQtd2hpdGUgZm9udC1tZWRpdW0iIH0sIFsKICAgICAgICAgICAgX3ZtLl92KCJEZXNpZ24geW91ciBvd24gcHJvZHVjdHM/IikKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAidGV4dC13aGl0ZSIgfSwgWwogICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgIlRlZXNwcmluZyBtYWtlcyBpdCBlYXN5IHRvIGNyZWF0ZSwgc2VsbCwgYW5kIG9yZGVyIGN1c3RvbSBwcm9kdWN0cy4iCiAgICAgICAgICAgICkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgICAiYmctcmVkLTYwMCB0ZXh0LXdoaXRlIGZvbnQtbWVkaXVtIHRleHQtc20gcHktMyBweC04IHJvdW5kZWQgbWwtOCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgW192bS5fdigiU3RhcnQgRGVzaWduaW5nIildCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXQogICAgKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm15LTEyIiB9LCBbCiAgICAgIF9jKCJoMiIsIHsgc3RhdGljQ2xhc3M6ICJmb250LWV4dHJhYm9sZCB0ZXh0LTJ4bCIgfSwgWwogICAgICAgIF92bS5fdigiUmVjb21tZW5kYXRpb25zIEZvciBZb3UiKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJwci04IiB9LCBbCiAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgc3RhdGljU3R5bGU6IHsgd2lkdGg6ICIzMDlweCIsIGhlaWdodDogIjM1MHB4IiB9LAogICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vLi4vYXNzZXRzL2ltYWdlLzIuanBnIikgfQogICAgICB9KSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LWNlbnRlciBteS00IiB9LCBbCiAgICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAidGV4dC1zbSIgfSwgW192bS5fdigiQmVlciBvJ2Nsb2siKV0pLAogICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogInRleHQteHMgdGV4dC1ncmF5LTYwMCIgfSwgWwogICAgICAgICAgX3ZtLl92KCJieSBDT0xMRUNUSU9OIEJFRVIgVC1TSElSVFMuIikKICAgICAgICBdKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJwci04IiB9LCBbCiAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgc3RhdGljU3R5bGU6IHsgd2lkdGg6ICIzMDlweCIsIGhlaWdodDogIjM1MHB4IiB9LAogICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vLi4vYXNzZXRzL2ltYWdlLzMuanBnIikgfQogICAgICB9KSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LWNlbnRlciBteS00IiB9LCBbCiAgICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAidGV4dC1zbSIgfSwgW192bS5fdigiQnV5IGJlZXIiKV0pLAogICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogInRleHQteHMgdGV4dC1ncmF5LTYwMCIgfSwgWwogICAgICAgICAgX3ZtLl92KCJieSBDT0xMRUNUSU9OIEJFRVIgVC1TSElSVFMuIikKICAgICAgICBdKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHt9LCBbCiAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgc3RhdGljU3R5bGU6IHsgd2lkdGg6ICIzMDlweCIsIGhlaWdodDogIjM1MHB4IiB9LAogICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vLi4vYXNzZXRzL2ltYWdlLzQuanBnIikgfQogICAgICB9KSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LWNlbnRlciBteS00IiB9LCBbCiAgICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAidGV4dC1zbSIgfSwgWwogICAgICAgICAgX3ZtLl92KCJCRkYgQmVlciBGcmllbmRzIEJvcmV2ZXIiKQogICAgICAgIF0pLAogICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogInRleHQteHMgdGV4dC1ncmF5LTYwMCIgfSwgWwogICAgICAgICAgX3ZtLl92KCJieSBDT0xMRUNUSU9OIEJFRVIgVC1TSElSVFMuIikKICAgICAgICBdKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJncmlkIGdyaWQtY29scy0xIGNvbnRhaW5lciBteC1hdXRvIiB9LCBbCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibXktMTIiIH0sIFsKICAgICAgICBfYygiaDIiLCB7IHN0YXRpY0NsYXNzOiAiZm9udC1leHRyYWJvbGQgdGV4dC0yeGwiIH0sIFsKICAgICAgICAgIF92bS5fdigiVHJlbmRpbmciKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImlubGluZS1mbGV4IiB9LCBbCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJwci04IiB9LCBbCiAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImJnLWdyYXktNjAwIiwKICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgd2lkdGg6ICIzMDlweCIsIGhlaWdodDogIjM1MHB4IiB9LAogICAgICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uLy4uL2Fzc2V0cy9pbWFnZS8xLmpwZyIpIH0KICAgICAgICAgIH0pLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LWNlbnRlciBteS00IiB9LCBbCiAgICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogInRleHQtc20iIH0sIFtfdm0uX3YoIkxpbWl0ZWQgRWRpdGlvbiIpXSksCiAgICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogInRleHQteHMgdGV4dC1ncmF5LTYwMCIgfSwgWwogICAgICAgICAgICAgIF92bS5fdigiYnkgQ09MTEVDVElPTiBCRUVSIFQtU0hJUlRTLiIpCiAgICAgICAgICAgIF0pCiAgICAgICAgICBdKQogICAgICAgIF0pLAogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicHItOCIgfSwgWwogICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgd2lkdGg6ICIzMDlweCIsIGhlaWdodDogIjM1MHB4IiB9LAogICAgICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uLy4uL2Fzc2V0cy9pbWFnZS8yLmpwZyIpIH0KICAgICAgICAgIH0pLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LWNlbnRlciBteS00IiB9LCBbCiAgICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogInRleHQtc20iIH0sIFtfdm0uX3YoIkJlZXIgbydjbG9rIildKSwKICAgICAgICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAidGV4dC14cyB0ZXh0LWdyYXktNjAwIiB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJieSBDT0xMRUNUSU9OIEJFRVIgVC1TSElSVFMuIikKICAgICAgICAgICAgXSkKICAgICAgICAgIF0pCiAgICAgICAgXSksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJwci04IiB9LCBbCiAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICBzdGF0aWNTdHlsZTogeyB3aWR0aDogIjMwOXB4IiwgaGVpZ2h0OiAiMzUwcHgiIH0sCiAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vLi4vYXNzZXRzL2ltYWdlLzMuanBnIikgfQogICAgICAgICAgfSksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRleHQtY2VudGVyIG15LTQiIH0sIFsKICAgICAgICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAidGV4dC1zbSIgfSwgW192bS5fdigiQnV5IGJlZXIiKV0pLAogICAgICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LXhzIHRleHQtZ3JheS02MDAiIH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoImJ5IENPTExFQ1RJT04gQkVFUiBULVNISVJUUy4iKQogICAgICAgICAgICBdKQogICAgICAgICAgXSkKICAgICAgICBdKSwKICAgICAgICBfYygiZGl2Iiwge30sIFsKICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IHdpZHRoOiAiMzA5cHgiLCBoZWlnaHQ6ICIzNTBweCIgfSwKICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi8uLi9hc3NldHMvaW1hZ2UvNC5qcGciKSB9CiAgICAgICAgICB9KSwKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGV4dC1jZW50ZXIgbXktNCIgfSwgWwogICAgICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LXNtIiB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJCRkYgQmVlciBGcmllbmRzIEJvcmV2ZXIiKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAidGV4dC14cyB0ZXh0LWdyYXktNjAwIiB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJieSBDT0xMRUNUSU9OIEJFRVIgVC1TSElSVFMuIikKICAgICAgICAgICAgXSkKICAgICAgICAgIF0pCiAgICAgICAgXSkKICAgICAgXSkKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKAogICAgICAiZGl2IiwKICAgICAgeyBzdGF0aWNDbGFzczogImdyaWQgZ3JpZC1jb2xzLTEgbXQtNiBtYi0yMCBjb250YWluZXIgbXgtYXV0byIgfSwKICAgICAgWwogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGV4dC0yeGwgZm9udC1leHRyYWJvbGQgbXktNiIgfSwgWwogICAgICAgICAgX3ZtLl92KCJGZWF0dXJlZCIpCiAgICAgICAgXSksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJpbmxpbmUtZmxleCIgfSwgWwogICAgICAgICAgX2MoImRpdiIsIHt9LCBbCiAgICAgICAgICAgIF9jKCJpbWciLCB7IGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vLi4vYXNzZXRzL2ltYWdlLzUucG5nIikgfSB9KQogICAgICAgICAgXSksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm14LTgiIH0sIFsKICAgICAgICAgICAgX2MoImltZyIsIHsgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi8uLi9hc3NldHMvaW1hZ2UvNi5wbmciKSB9IH0pCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKCJkaXYiLCB7fSwgWwogICAgICAgICAgICBfYygiaW1nIiwgeyBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uLy4uL2Fzc2V0cy9pbWFnZS83LnBuZyIpIH0gfSkKICAgICAgICAgIF0pCiAgICAgICAgXSkKICAgICAgXQogICAgKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImJsb2NrIiB9LCBbCiAgICAgIF9jKCJ1bCIsIFsKICAgICAgICBfYygiaDQiLCB7IHN0YXRpY0NsYXNzOiAiZm9udC1zZW1pYm9sZCIgfSwgW192bS5fdigiU2VsbCIpXSksCiAgICAgICAgX2MoCiAgICAgICAgICAibGkiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogImlubGluZS1ncmlkIGZvbnQtbGlnaHQgdGV4dC1zbSB0ZXh0LWdyYXktNjAwIiB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJteS0yIiwgYXR0cnM6IHsgaHJlZjogIiIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJRdWlja3N0YXJ0IGd1aWRlIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogIm15LTIiLCBhdHRyczogeyBocmVmOiAiIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIlNlbGwgYW55dGhpbmciKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAibXktMiIsIGF0dHJzOiB7IGhyZWY6ICIiIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiU2VsbCBldmVyeXdoZXJlIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogIm15LTIiLCBhdHRyczogeyBocmVmOiAiIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIlByb2R1Y3RzIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogIm15LTIiLCBhdHRyczogeyBocmVmOiAiIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIkJyYW5kcyIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJteS0yIiwgYXR0cnM6IHsgaHJlZjogIiIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJUcmFpbmluZyBjZW50ZXIiKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAibXktMiIsIGF0dHJzOiB7IGhyZWY6ICIiIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiU3RhcnQgc2VsbGluZyIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIiIgfSB9LCBbX3ZtLl92KCJMb2dpbiIpXSkKICAgICAgICAgIF0KICAgICAgICApCiAgICAgIF0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2Iiwge30sIFsKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJoNCIsIHsgc3RhdGljQ2xhc3M6ICJmb250LXNlbWlib2xkIiB9LCBbX3ZtLl92KCJCdXkiKV0pLAogICAgICAgIF9jKAogICAgICAgICAgImxpIiwKICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJpbmxpbmUtZ3JpZCBmb250LWxpZ2h0IHRleHQtc20gdGV4dC1ncmF5LTYwMCIgfSwKICAgICAgICAgIFsKICAgICAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAibXktMiIsIGF0dHJzOiB7IGhyZWY6ICIiIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiUXVpY2tzdGFydCBndWlkZSIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJteS0yIiwgYXR0cnM6IHsgaHJlZjogIiIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJTZWxsIGFueXRoaW5nIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogIm15LTIiLCBhdHRyczogeyBocmVmOiAiIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIlNlbGwgZXZlcnl3aGVyZSIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJteS0yIiwgYXR0cnM6IHsgaHJlZjogIiIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJQcm9kdWN0cyIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJteS0yIiwgYXR0cnM6IHsgaHJlZjogIiIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJCcmFuZHMiKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAibXktMiIsIGF0dHJzOiB7IGhyZWY6ICIiIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiVHJhaW5pbmcgY2VudGVyIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiIiB9IH0sIFtfdm0uX3YoIlN0YXJ0IHNlbGxpbmciKV0pCiAgICAgICAgICBdCiAgICAgICAgKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHt9LCBbCiAgICAgIF9jKCJ1bCIsIFsKICAgICAgICBfYygiaDQiLCB7IHN0YXRpY0NsYXNzOiAiZm9udC1zZW1pYm9sZCIgfSwgW192bS5fdigiSW50ZWdyYXRpb25zIildKSwKICAgICAgICBfYygKICAgICAgICAgICJsaSIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaW5saW5lLWdyaWQgZm9udC1saWdodCB0ZXh0LXNtIHRleHQtZ3JheS02MDAiIH0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogIm15LTIiLCBhdHRyczogeyBocmVmOiAiIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIlF1aWNrc3RhcnQgZ3VpZGUiKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAibXktMiIsIGF0dHJzOiB7IGhyZWY6ICIiIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiU2VsbCBhbnl0aGluZyIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJteS0yIiwgYXR0cnM6IHsgaHJlZjogIiIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJTZWxsIGV2ZXJ5d2hlcmUiKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAibXktMiIsIGF0dHJzOiB7IGhyZWY6ICIiIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiUHJvZHVjdHMiKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAibXktMiIsIGF0dHJzOiB7IGhyZWY6ICIiIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiQnJhbmRzIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiIiB9IH0sIFtfdm0uX3YoIlRyYWluaW5nIGNlbnRlciIpXSkKICAgICAgICAgIF0KICAgICAgICApCiAgICAgIF0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2Iiwge30sIFsKICAgICAgX2MoInVsIiwgWwogICAgICAgIF9jKCJoNCIsIHsgc3RhdGljQ2xhc3M6ICJmb250LXNlbWlib2xkIiB9LCBbX3ZtLl92KCJBYm91dCIpXSksCiAgICAgICAgX2MoCiAgICAgICAgICAibGkiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogImlubGluZS1ncmlkIGZvbnQtbGlnaHQgdGV4dC1zbSB0ZXh0LWdyYXktNjAwIiB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJteS0yIiwgYXR0cnM6IHsgaHJlZjogIiIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJRdWlja3N0YXJ0IGd1aWRlIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogIm15LTIiLCBhdHRyczogeyBocmVmOiAiIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIlNlbGwgYW55dGhpbmciKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAibXktMiIsIGF0dHJzOiB7IGhyZWY6ICIiIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiU2VsbCBldmVyeXdoZXJlIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiIiB9IH0sIFtfdm0uX3YoIlByb2R1Y3RzIildKQogICAgICAgICAgXQogICAgICAgICkKICAgICAgXSkKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZ3JpZCBncmlkLWNvbHMtMSBjb250YWluZXIgbXgtYXV0byIgfSwgWwogICAgICBfYygKICAgICAgICAiZGl2IiwKICAgICAgICB7IHN0YXRpY0NsYXNzOiAiZmxleCB0ZXh0LWdyYXktNjAwIHRleHQtc20gZm9udC1saWdodCBteS0xMCIgfSwKICAgICAgICBbCiAgICAgICAgICBfYygicCIsIHt9LCBbX3ZtLl92KCLCqSAyMDIwIFRlZXNwcmluZywgSW5jLiIpXSksCiAgICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJteC0yIiB9LCBbX3ZtLl92KCJUZXJtcyBvZiBzZXJ2aWNlIildKSwKICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogIm14LTIiIH0sIFtfdm0uX3YoIlByaXZhY3kgcG9saWN5IildKSwKICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogIm14LTIiIH0sIFtfdm0uX3YoIlNlY3VyaXR5IildKSwKICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogIm14LTIiIH0sIFsKICAgICAgICAgICAgX3ZtLl92KCJEbyBub3Qgc2VsbCBteSBpbmZvLiB8IENBIHByaXZhY3kgcmlnaHRzIikKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoInAiLCB7fSwgW192bS5fdigiSW1wcmVzc3VtIildKQogICAgICAgIF0KICAgICAgKQogICAgXSkKICB9Cl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}